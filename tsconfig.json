{
  "compilerOptions": {
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["dom", "dom.iterable", "esnext", "webworker"],                                   /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "preserve",
    "module": "commonjs",                                /* Specify what module code is generated. */
    "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@styles*": ["src/styles/*"],
      "@components*": ["src/components/*"],
      "@assets*": ["src/assets/*"],
      "@hooks*": ["hooks/*"],
      "@public*": ["public/*"],
      "@containers*": ["src/containers/*"],
      "@context*": ["src/context/*"],
      "@utils*": ["src/utils/*"],
      "@database*": ["src/database/*"]
    },
    // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */                       /* List of file name suffixes to search when resolving a module. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
    "noEmit": true,                                   /* Disable emitting files from a compilation. */
    "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": false,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": ["**/*.ts", "**/*.tsx", "types/*.d.ts"],
  "exclude": ["node_modules", "src/**/*.spec.ts"]
}
